<?php// the constantsdefine('DB_HOST', 'localhost');define('DB_USER', 'root');define('DB_PASS', 'rootuser');define('DB_NAME', 'web_scrapper');/** * MySQLDatabase Class * * Simple class to insert, update, delete and read/ access database info * * @database type	- MySQL * @author: Lenin Hasda * @author url: http://leninhasda.net * @version: 1.0 */ /** * Class definition starts */class MySQLDatabase {	/***********	 * VARIABLES	 */	 	/**	 * connection handle for database	 *	 * @var resource	 * @access	private	 */	private $connection;		/**	 * stores the last run query	 *	 * @var string	 * @access private	 */	public	$last_query;		/** 	 * check if magic quote is active or not	 *	 * @var boolean	 * @access privte	 */	private $magic_quotes_active;		/**	 * check if real escape string exists or not	 *	 * @var boolean	 * @access private	 */	private $real_escape_string_exists;		/********************************	 * Initalize and Closing Methods	 */		/**	 * initialize the object	 *	 * @constructor	 * @access public	 * @param null	 * @return void	 */	function __construct() {		$this->open_connection();		$this->magic_quotes_active = get_magic_quotes_gpc();		$this->real_escape_string_exists = function_exists( "mysql_real_escape_string" );	}		/**	 * creates the database connection	 *	 * @access private	 * @param null	 * @return void	 */	private function open_connection() {		$this->connection = mysql_connect(DB_HOST, DB_USER, DB_PASS);		if (!$this->connection) {			die("Database connection failed: " . mysql_error());		} else {			$db_select = mysql_select_db(DB_NAME, $this->connection);			if (!$db_select) {				die("Database selection failed: " . mysql_error());			}		}	}		/**	 * close the current database connection	 *	 * @access public	 * @param null	 * @return void	 */	public function close_connection() {		if(isset($this->connection)) {			mysql_close($this->connection);			unset($this->connection);		}	}		/**	 * runs given query	 *	 * @access public	 * @param string -SQL query	 * @return resources	 **/	public function query($sql) {		$this->last_query = $sql;		$result = mysql_query($sql, $this->connection);		$this->confirm_query($result);		return $result;	}		/**	 * escapes unnecessary charater from value	 *	 * @access public	 * @param -a value	 * @return escaped value	 */	public function escape_value($value) {		if( $this->real_escape_string_exists ) { // PHP v4.3.0 or higher			// undo any magic quote effects so mysql_real_escape_string can do the work			if( $this->magic_quotes_active ) { $value = stripslashes( $value ); }			$value = mysql_real_escape_string( $value );		} else { // before PHP v4.3.0			// if magic quotes aren't already on then add slashes manually			if( !$this->magic_quotes_active ) { $value = addslashes( $value ); }			// if magic quotes are active, then the slashes already exist		}		return $value;	}		/**	 * retrive value as array from database result set	 *	 * @access public	 * @param resource -query result set	 * @return array - result data	 */	public function fetch_array($result_set) {		return mysql_fetch_array($result_set);	}		/**	 * retrive number of row in a result set	 *	 * @access public	 * @param resource - query result set	 * @return int - number of row	 */	public function num_rows($result_set) {		return mysql_num_rows($result_set);	}		/**	 * retrive last inserted id	 *	 * @access public	 * @param null	 * @return int - row id	 */	public function insert_id() {		// get the last id inserted over the current db connection		return mysql_insert_id($this->connection);	}		/**	 * retrive number of affected rows	 *	 * @access public	 * @param null	 * @return int - num of affected row	 */	public function affected_rows() {		return mysql_affected_rows($this->connection);	}		/**	 * define whether a query was success or not	 *	 * @access public	 * @param resource - query result	 * @return void	 */	private function confirm_query($result) {		if (!$result) {			$output = "Database query failed: " . mysql_error() . "<br /><br />";			$output .= "Last SQL query: " . $this->last_query;			die( $output );		}	}	}/** * initialize a global database object * and make a reference of it */$database = new MySQLDatabase();$db =& $database;